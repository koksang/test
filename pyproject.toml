[tool.poetry]
name = "time"
version = "0.1.0"
description = ""
authors = ["koksang <koksanggl@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11,<3.13"
apache-airflow = { version = "2.10.0", extras = [
    "cncf-kubernetes",
    "google",
    "postgres",
] }
dbt-bigquery = "1.8.2"
ruff = "^0.6.1"
sqlfluff = "^3.1.0"
regex = "^2024.7.24"
pathlib = "^1.0.1"
sqlfluff-templater-dbt = "^3.1.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "de_dbt",
    "archived",
] # Exclude a variety of commonly ignored directories.

line-length = 100
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "F401", # imported but used
    "D417",
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "C417", # Unnecessary `map` usage (rewrite using a generator expression)
    "C408", # Unnecessary `dict` call (rewrite as a literal)
    "F722", # Syntax error in forward annotation
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "I002"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
combine-as-imports = true
split-on-trailing-comma = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

exclude = ["*.pyi"]
